name: CD Azure Event Trigger

on:
  push:
    paths:
    - '.github/workflows/cd-azure-event-trigger.yml'
    - 'event_trigger/**'
    branches: [master]
  workflow_dispatch:
    paths:
    - '.github/workflows/cd-azure-event-trigger.yml'
    - 'event_trigger/**'
    branches: [master]

env:
  pulumi_version: '2.4.0'
  pulumi_azure_plugin_version: 'v3.6.1'
  pulumi_azure_ad_plugin_version: 'v2.2.1'
  pulumi_stack_name: sre-deadletter-watcher-prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@v2

    - name: Set up Python üêç
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
      
      
    - name: Install Python Dependencies üêç
      run: |
        python -m pip install --upgrade pip pipenv


    - name: Install Pulumi
      run: |
        cd ./event_trigger/
        curl -fsSL https://get.pulumi.com | sh -s -- --version $pulumi_version
        echo "Done CURL"
        echo "::add-path::/home/runner/.pulumi/bin"
        
    - uses: azure/login@v1.1
      with:
        creds: ${{ secrets.DL_AZURE_CREDS }}
        

    - name: Set Env Vars to Login to Pulumi
      run: |
        export TMP_AZURE_STORAGE_KEY=`az storage account keys list --account-name "${{ secrets.AZURE_PULUMI_STORAGE_ACCOUNT_NAME}}"  --resource-group "rg-pulumi-shared" --subscription "${{ secrets.PULUMI_STORAGE_SUBS_NAME }}" --query "[0].value" | tr -d \ | sed -r 's/^"|"$//g'`
        echo "::set-env name=AZURE_STORAGE_KEY::$TMP_AZURE_STORAGE_KEY"
        echo "::set-env name=AZURE_STORAGE_ACCOUNT::${{ secrets.AZURE_PULUMI_STORAGE_ACCOUNT_NAME}}"


    - name: Log into Pulumi Backend
      run: |
        pulumi login --cloud-url azblob://pulumi
        
        
    - name: Populate Env Vars with Azure Credentials ‚òÅÔ∏è
      run: |
        echo "::set-env name=ARM_SUBSCRIPTION_ID::${{ secrets.FILETRUST_CLOUD_SUBSCRIPTION_ID }}"
        echo "::set-env name=AZURE_CLIENT_ID::${{ secrets.PULUMI_AZURE_CLIENT_ID }}"
        echo "::set-env name=AZURE_CLIENT_SECRET::${{ secrets.PULUMI_AZURE_CLIENT_SECRET }}"
        echo "::set-env name=AZURE_TENANT_ID::${{ secrets.PULUMI_AZURE_TENANT_ID }}"
        echo "::set-env name=ARM_CLIENT_ID::${{ secrets.PULUMI_AZURE_CLIENT_ID }}"
        echo "::set-env name=ARM_CLIENT_SECRET::${{ secrets.PULUMI_AZURE_CLIENT_SECRET }}"
        echo "::set-env name=ARM_TENANT_ID::${{ secrets.PULUMI_AZURE_TENANT_ID }}"
        
        
    - name: Install Pulumi Azure Plugins
      run: |
        pulumi plugin install resource azure $pulumi_azure_plugin_version
        pulumi plugin install resource azuread $pulumi_azure_ad_plugin_version


    - name: Configure AWS Credentials ‚òÅÔ∏è
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.DEADLETTER_WATCHER_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.DEADLETTER_WATCHER_AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2


    - name: Run Pulumi Up
      run: |
        cd ./event_trigger/
        export PULUMI_SECRET_KEY=${{ secrets.PULUMI_SECRET_KEY }}
        pipenv install
        pulumi login --cloud-url azblob://pulumi
        pipenv run pulumi up --non-interactive --yes --stack $pulumi_stack_name

#    - name: Run Pulumi Destroy
#      run: |
#        cd ./event_trigger/
#        export PULUMI_SECRET_KEY=${{ secrets.PULUMI_SECRET_KEY }}
#        pipenv install
#        pulumi login --cloud-url azblob://pulumi
#        pipenv run pulumi destroy --non-interactive --yes --stack $pulumi_stack_name

